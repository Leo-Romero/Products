{
  "info": {
    "_postman_id": "fd758b19-cb65-4af4-bf31-f00d9208d1d2",
    "name": "Users Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Login",
      "item": [
        {
          "name": "Login - Success",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test(\"Response is json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"data\");",
                  "    pm.expect(jsonData.data).to.have.property(\"token\");",
                  "    pm.expect(jsonData.data.token).to.be.an(\"string\");",
                  "    pm.expect(jsonData.data).to.have.property(\"user\");",
                  "    pm.expect(jsonData.data).to.have.property(\"role\");",
                  "",
                  "    pm.collectionVariables.set(\"token\", jsonData.data.token)",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"pedro@mail.com\",\n  \"password\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/v1/auth/login",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "v1", "auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Login - Invalid credentials",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 200\", function () {",
                  "    pm.response.to.not.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test(\"Response is json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"error\");",
                  "    pm.expect(jsonData.error).to.have.property(\"message\");",
                  "    pm.expect(jsonData.error.message).to.be.an(\"string\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"notexist@mail.com\",\n  \"password\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/v1/auth/login",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "v1", "auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Login - Invalid request",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 200\", function () {",
                  "    pm.response.to.not.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test(\"Response is json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"error\");",
                  "    pm.expect(jsonData.error).to.have.property(\"message\");",
                  "    pm.expect(jsonData.error.message).to.be.an(\"string\");",
                  "    pm.expect(jsonData.error).to.have.property(\"detail\");",
                  "    pm.expect(jsonData.error.detail).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"notisaemail\",\n  \"password\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/v1/auth/login",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "v1", "auth", "login"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Get All Users",
      "item": [
        {
          "name": "Get All - Complete filters - Success",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test(\"Response is json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"data\");",
                  "    pm.expect(jsonData.data).to.have.property(\"docs\");",
                  "    pm.expect(jsonData.data.docs).to.be.an(\"array\");",
                  "    pm.expect(jsonData.data).to.have.property(\"totalDocs\");",
                  "    pm.expect(jsonData.data.totalDocs).to.have.an(\"number\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "http://localhost:3000/api/v1/users?filter[name}=Pepe&filter[email]=pargento@mail.com&options[limit]=3&options[offset]=0&filter[lastName]=Argento",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "v1", "users"],
              "query": [
                {
                  "key": "filter[name}",
                  "value": "Pepe"
                },
                {
                  "key": "filter[email]",
                  "value": "pargento@mail.com"
                },
                {
                  "key": "options[limit]",
                  "value": "3"
                },
                {
                  "key": "options[offset]",
                  "value": "0"
                },
                {
                  "key": "filter[lastName]",
                  "value": "Argento"
                }
              ]
            },
            "description": " "
          },
          "response": []
        },
        {
          "name": "Get All - Without Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test(\"Response is json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"error\");",
                  "    pm.expect(jsonData.error).to.have.property(\"message\");",
                  "    pm.expect(jsonData.error.message).to.be.an(\"string\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{token}}",
                "disabled": true
              }
            ],
            "url": {
              "raw": "http://localhost:3000/api/v1/users?filter[name}=Pepe&filter[email]=pargento@mail.com&options[limit]=3&options[offset]=0&filter[lastName]=Argento",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "v1", "users"],
              "query": [
                {
                  "key": "filter[name}",
                  "value": "Pepe"
                },
                {
                  "key": "filter[email]",
                  "value": "pargento@mail.com"
                },
                {
                  "key": "options[limit]",
                  "value": "3"
                },
                {
                  "key": "options[offset]",
                  "value": "0"
                },
                {
                  "key": "filter[lastName]",
                  "value": "Argento"
                }
              ]
            },
            "description": " "
          },
          "response": []
        }
      ]
    },
    {
      "name": "Save User",
      "item": [
        {
          "name": "Save User - Success",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test(\"Response is json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"data\");",
                  "    pm.expect(jsonData.data).to.have.property(\"email\");",
                  "    pm.expect(jsonData.data.email).to.be.an(\"string\");",
                  "    pm.expect(jsonData.data).to.have.property(\"_id\");",
                  "    pm.expect(jsonData.data._id).to.have.an(\"string\");",
                  "",
                  "    pm.collectionVariables.set(\"userId\", jsonData.data._id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"randomNumber\", Math.random());"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Pedro3\",\n  \"lastName\":\"Gomez3\",\n  \"email\": \"{{randomNumber}}@mail.com\",\n  \"password\": \"123456\",\n  \"birthdate\": \"02/28/1980\",\n  \"enable\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/v1/users",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "v1", "users"]
            },
            "description": " "
          },
          "response": []
        },
        {
          "name": "Save User - Failure",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test(\"Response is json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"error\");",
                  "    pm.expect(jsonData.error).to.have.property(\"message\");",
                  "    pm.expect(jsonData.error.message).to.be.an(\"string\");",
                  "    pm.expect(jsonData.error).to.have.property(\"detail\");",
                  "    pm.expect(jsonData.error.detail).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"randomNumber\", Math.random());"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Pedro3\",\n  \"lastName\":\"Gomez3\",\n  \"email\": \"pedro3@mail.com\",\n  \"password\": \"123456\",\n  \"birthdate\": \"02/28/1980\",\n  \"enable\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/v1/users",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "v1", "users"]
            },
            "description": " "
          },
          "response": []
        }
      ]
    },
    {
      "name": "Update User",
      "item": [
        {
          "name": "Update User - Success",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test(\"Response is json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"data\");",
                  "    pm.expect(jsonData.data).to.have.property(\"email\");",
                  "    pm.expect(jsonData.data.email).to.be.an(\"string\");",
                  "    pm.expect(jsonData.data).to.have.property(\"_id\");",
                  "    pm.expect(jsonData.data._id).to.have.an(\"string\");",
                  "",
                  "    pm.environment.set(\"userId\", jsonData.data._id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Luis\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/v1/users?id={{userId}}",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "v1", "users"],
              "query": [
                {
                  "key": "id",
                  "value": "{{userId}}"
                }
              ]
            },
            "description": " "
          },
          "response": []
        },
        {
          "name": "Update User - Failure",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test(\"Response is json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"error\");",
                  "    pm.expect(jsonData.error).to.have.property(\"message\");",
                  "    pm.expect(jsonData.error.message).to.be.an(\"string\");",
                  "    pm.expect(jsonData.error).to.have.property(\"detail\");",
                  "    pm.expect(jsonData.error.detail).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Luis\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/v1/users?id=abc123",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "v1", "users"],
              "query": [
                {
                  "key": "id",
                  "value": "abc123"
                }
              ]
            },
            "description": " "
          },
          "response": []
        }
      ]
    },
    {
      "name": "Delete User",
      "item": [
        {
          "name": "Delete User - Success",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test(\"Response is json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"data\");",
                  "    pm.expect(jsonData.data).to.have.property(\"email\");",
                  "    pm.expect(jsonData.data.email).to.be.an(\"string\");",
                  "    pm.expect(jsonData.data).to.have.property(\"_id\");",
                  "    pm.expect(jsonData.data._id).to.have.an(\"string\");",
                  "",
                  "    pm.environment.set(\"userId\", jsonData.data._id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:3000/api/v1/users?id={{userId}}",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "v1", "users"],
              "query": [
                {
                  "key": "id",
                  "value": "{{userId}}"
                }
              ]
            },
            "description": " "
          },
          "response": []
        },
        {
          "name": "Delete User - Failure",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test(\"Response is json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"error\");",
                  "    pm.expect(jsonData.error).to.have.property(\"message\");",
                  "    pm.expect(jsonData.error.message).to.be.an(\"string\");",
                  "    pm.expect(jsonData.error).to.have.property(\"detail\");",
                  "    pm.expect(jsonData.error.detail).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "type": "text",
                "value": "{{token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:3000/api/v1/users?id=abc123",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "v1", "users"],
              "query": [
                {
                  "key": "id",
                  "value": "abc123"
                }
              ]
            },
            "description": " "
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "token",
      "value": ""
    },
    {
      "key": "randomNumber",
      "value": ""
    }
  ]
}
